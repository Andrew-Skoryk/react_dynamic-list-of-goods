{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","id","color","name","style","API_URL","getAll","a","fetch","GoodsFromServer","json","get5First","goodsFromServer","sort","prev","curr","localeCompare","slice","getRedGoods","filter","App","useState","visibleGoods","setVisibleGoods","handleShowAll","handleFirstFive","handleShowRed","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACT,oBAEE,UAAQ,OACRC,MAAO,CAAEF,SAHX,SAKGC,GAJIF,SCRPI,EAAO,wEAEN,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACyBC,MAAMH,GAD/B,cACCI,EADD,yBAGEA,EAAgBC,QAHlB,4C,sBAMA,IAAMC,EAAS,uCAAG,4BAAAJ,EAAA,sEACOD,IADP,cACjBM,EADiB,yBAGhBA,EAAgBC,MAAK,SAACC,EAAMC,GAAP,OAC1BD,EAAKX,KAAKa,cAAcD,EAAKZ,SAE5Bc,MAAM,EAAG,IANW,2CAAH,qDASTC,EAAW,uCAAG,4BAAAX,EAAA,sEACKD,IADL,cACnBM,EADmB,yBAGlBA,EAAgBO,QAAO,kBAAyB,QAAzB,EAAGjB,UAHR,2CAAH,qDCdXkB,EAAgB,WAC3B,MAAwCC,mBAAiB,IAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAa,uCAAG,4BAAAjB,EAAA,sEACUD,IADV,OACdM,EADc,OAGpBW,EAAgBX,GAHI,2CAAH,qDAMba,EAAe,uCAAG,4BAAAlB,EAAA,sEACQI,IADR,OAChBC,EADgB,OAGtBW,EAAgBX,GAHM,2CAAH,qDAMfc,EAAa,uCAAG,4BAAAnB,EAAA,sEACUW,IADV,OACdN,EADc,OAGpBW,EAAgBX,GAHI,2CAAH,qDAMnB,OACE,sBAAKe,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAASL,EAHX,4BAQA,wBACEI,KAAK,SACL,UAAQ,oBACRC,QAASJ,EAHX,gCAQA,wBACEG,KAAK,SACL,UAAQ,aACRC,QAASH,EAHX,4BAQA,cAAC,EAAD,CAAW3B,MAAOuB,QCpDxBQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1c50fef4.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(({ id, color, name }) => (\n      <li\n        key={id}\n        data-cy=\"good\"\n        style={{ color }}\n      >\n        {name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport async function getAll(): Promise<Good[]> {\n  const GoodsFromServer = await fetch(API_URL);\n\n  return GoodsFromServer.json();\n}\n\nexport const get5First = async () => {\n  const goodsFromServer = await getAll();\n\n  return goodsFromServer.sort((prev, curr) => (\n    prev.name.localeCompare(curr.name)\n  ))\n    .slice(0, 5);\n};\n\nexport const getRedGoods = async () => {\n  const goodsFromServer = await getAll();\n\n  return goodsFromServer.filter(({ color }) => color === 'red');\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [visibleGoods, setVisibleGoods] = useState<Good[]>([]);\n\n  const handleShowAll = async () => {\n    const goodsFromServer = await getAll();\n\n    setVisibleGoods(goodsFromServer);\n  };\n\n  const handleFirstFive = async () => {\n    const goodsFromServer = await get5First();\n\n    setVisibleGoods(goodsFromServer);\n  };\n\n  const handleShowRed = async () => {\n    const goodsFromServer = await getRedGoods();\n\n    setVisibleGoods(goodsFromServer);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={handleShowAll}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={handleFirstFive}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={handleShowRed}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}